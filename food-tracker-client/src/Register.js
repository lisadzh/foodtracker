import React, { useState } from "react";
import axios from "axios";
import { FaEnvelope, FaLock } from "react-icons/fa";
import BackButton from "./BackButton";
import BackgroundWrapper from "./components/BackgroundWrapper";
import { useNavigate } from "react-router-dom";
import { useAuth } from "./AuthContext"; // üîê

import "./Register.css";

export default function Register() {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [message, setMessage] = useState("");

  const { login } = useAuth(); // –æ—Ç—Ä–∏–º—É—î–º–æ login() –∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
  const navigate = useNavigate(); // –¥–ª—è —Ä–µ–¥–∏—Ä–µ–∫—Ç—É

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      // 1. –†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è
      await axios.post("http://localhost:5000/api/register", {
        email,
        password,
      });

      setMessage("–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –í—Ö—ñ–¥..."); // –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è

      // 2. –í—Ö—ñ–¥
      const loginRes = await axios.post("http://localhost:5000/api/login", {
        email,
        password,
      });

      login(loginRes.data.token); // —Ç–æ–∫–µ–Ω —É –∫–æ–Ω—Ç–µ–∫—Å—Ç

      // –∑–∞—Ç—Ä–∏–º–∫–∞ –ø–µ—Ä–µ–¥ —Ä–µ–¥–∏—Ä–µ–∫—Ç–æ–º
      setTimeout(() => {
        navigate("/profile");
      }, 2000); // 2 —Å–µ–∫—É–Ω–¥–∏
    } catch (err) {
      setMessage(err.response?.data?.message || "‚ùå –ü–æ–º–∏–ª–∫–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó");
    }
  };

  return (
    <BackgroundWrapper>
      <div className="register-container">
        <BackButton />
        <h2 className="page-title">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</h2>

        <form onSubmit={handleSubmit} className="register-form">
          <div className="input-wrapper">
            <FaEnvelope className="input-icon" />
            <input
              type="email"
              placeholder="–í–∞—à email"
              required
              value={email}
              onChange={(e) => setEmail(e.target.value)}
            />
          </div>

          <div className="input-wrapper">
            <FaLock className="input-icon" />
            <input
              type="password"
              placeholder="–í–∞—à –ø–∞—Ä–æ–ª—å"
              required
              value={password}
              onChange={(e) => setPassword(e.target.value)}
            />
          </div>

          <button type="submit">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è</button>

          {message && <p className="register-message">{message}</p>}
        </form>
      </div>
    </BackgroundWrapper>
  );
}
